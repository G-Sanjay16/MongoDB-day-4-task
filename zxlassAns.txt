1)Find all the topics and tasks which are thought in the month of October
ans:
db.topics.aggregate([
  			{$lookup:{
				 from: "tasks",
 				 localField:"topic_id",
  				 foreignField: "topic_id",
  				 as: "task"		
				}
			},
			{$match:{
				$and:[
   				 	{start_date:{$gte:ISODate('2020-10-01'),$lte:ISODate('2020-10-30')}},
    					{"task.deadline_date":{$gte:ISODate('2020-10-01'),$lte:ISODate('2020-10-30')}}
 				     ]
				}
			},
			{$project:{
				task_id:0
				}
			},
			{$project:{
				"task":{"topic_id":0}
				}
			}
			]);
output:
    {
  _id: ObjectId('66ac550e14f269d2dd7982e5'),
  topic_id: 3,
  topic: 'Bootstrap',
  description: 'FrameWork',
  start_date: 2020-10-01T00:00:00.000Z,
  end_date: 2020-10-30T00:00:00.000Z,
  task: [
    {
      _id: ObjectId('66ac553014f269d2dd7982ea'),
      task_id: 3,
      topic: 'Bootstrap',
      description: 'Complete them with responsive design - Food Landing Page using Bootstrap FrameWork',
      deadline_date: 2020-10-30T00:00:00.000Z
    }
  ]
}

2)Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020
ans:
db.company_drives.aggregate([{$match:
					    {drive_date:{$gte:ISODate('2020-10-15'),$lte:ISODate('2020-10-31')}}
				     }]);
output:
{
  _id: ObjectId('66ac558d14f269d2dd7982f6'),
  user_id: 3,
  drive_date: 2020-10-16T00:00:00.000Z,
  company: 'Amazon'
}
{
  _id: ObjectId('66ac558d14f269d2dd7982f7'),
  user_id: 4,
  drive_date: 2020-10-25T00:00:00.000Z,
  company: 'Microsoft'
}
3)Find all the company drives and students who are appeared for the placement.
ans:
db.company_drives.aggregate([
  				{$lookup:{
  					from: "users",
 						localField:"user_id",
  					foreignField: "user_id",
  					as: "student"
					}
				},{$project:{
					userid:0
					}
				},{$project:{
  					student:{_id:0}
					}
				}
				]);

output:
{
  _id: ObjectId('66ac558d14f269d2dd7982f4'),
  user_id: 1,
  drive_date: 2020-08-05T00:00:00.000Z,
  company: 'TCS',
  student: []
}
{
  _id: ObjectId('66ac558d14f269d2dd7982f5'),
  user_id: 2,
  drive_date: 2020-09-10T00:00:00.000Z,
  company: 'Infosys',
  student: []
}
{
  _id: ObjectId('66ac558d14f269d2dd7982f6'),
  user_id: 3,
  drive_date: 2020-10-16T00:00:00.000Z,
  company: 'Amazon',
  student: []
}
{
  _id: ObjectId('66ac558d14f269d2dd7982f7'),
  user_id: 4,
  drive_date: 2020-10-25T00:00:00.000Z,
  company: 'Microsoft',
  student: []
}
{
  _id: ObjectId('66ac558d14f269d2dd7982f8'),
  user_id: 5,
  drive_date: 2020-12-10T00:00:00.000Z,
  company: 'Accenture',
  student: []
}
4)Find the number of problems solved by the user in codekata
ans:
db.user.aggregate([
  				{$lookup:{
  					from: "codekata",
  					localField: "user_id",
  					foreignField: "user_id",
  					as: "codekata"
					}
				},{$project:{
 						"codekata":{_id:0,user_id:0}
					    }
				}
				]);

output:

        {
  _id: ObjectId('66ac51af14f269d2dd7982a7'),
  user_id: 1,
  name: 'Arunkumar',
  email: 'arunkumar09@gmail.com',
  location: 'coimbatore',
  codekata: [
    {
      user_name: 'Arunkumar',
      codekata_solved: 400,
      webkata_solved: 40
    }
  ]
}
{
  _id: ObjectId('66ac51af14f269d2dd7982a8'),
  user_id: 2,
  name: 'Vijayakumar',
  email: 'vijayakumar123@gmail.com',
  location: 'Tanjor',
  codekata: [
    {
      user_name: 'Vijayakumar',
      codekata_solved: 500,
      webkata_solved: 50
    }
  ]
}
{
  _id: ObjectId('66ac51af14f269d2dd7982a9'),
  user_id: 3,
  name: 'Mithra',
  email: 'mithra21@gmail.com',
  location: 'kerala',
  codekata: [
    {
      user_name: 'Mithra',
      codekata_solved: 250,
      webkata_solved: 60
    }
  ]
}
{
  _id: ObjectId('66ac51af14f269d2dd7982aa'),
  user_id: 4,
  name: 'Alagesan',
  email: 'alagesan88@gmail.com',
  location: 'chithambaram',
  codekata: [
    {
      user_name: 'Alagesan',
      codekata_solved: 200,
      webkata_solved: 75
    }
  ]
}
{
  _id: ObjectId('66ac51af14f269d2dd7982ab'),
  user_id: 5,
  name: 'jake sully',
  email: 'jakesully@gmail.com',
  location: 'U.S',
  codekata: [
    {
      user_name: 'jake sully',
      codekata_solved: 100,
      webkata_solved: 100
    }
  ]
}


5)Find all the mentors with who has the mentee's count more than 15
ans:
db.mentors.aggregate([
  				{$match:{
 					mentees:{$gt:15}
				}},{$project:{
					_id:0
				}}
				]);
output:
{
  mentor_id: 1,
  mentor_name: 'Mr.Rupan',
  mentees: 75
}
{
  mentor_id: 2,
  mentor_name: 'Mr.Ramesh',
  mentees: 25
}
{
  mentor_id: 3,
  mentor_name: 'Mr.Arivoli',
  mentees: 50
}
{
  mentor_id: 4,
  mentor_name: 'Mr.Kirubarani',
  mentees: 90
}
{
  mentor_id: 5,
  mentor_name: 'Mr.Kalaiselvi',
  mentees: 40
}
{
  mentor_id: 7,
  mentor_name: 'Mr.Thangavel',
  mentees: 99
}
6)Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020
ans:
db.attendance.aggregate([
  {
    $match: {
      "Class_date": {
        $gte: ISODate("2020-10-15"),
        $lte: ISODate("2020-10-31")
      },
      "attendance": false
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "user_id",
      foreignField: "user_id",
      as: "tasks"
    }
  },
  {
    $match: {
      "tasks": { $eq: [] }
    }
  },
  {
    $group: {
      _id: "$user_id",
      count: { $sum: 1 }
    }
  },
  {
    $count: "totalUsersAbsentWithNoTasks"
  }
]);

output:
       {
  totalUsersAbsentWithNoTasks: 3
}
